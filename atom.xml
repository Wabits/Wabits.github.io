<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wabits的小站</title>
  
  
  <link href="https://wabits.github.io/atom.xml" rel="self"/>
  
  <link href="https://wabits.github.io/"/>
  <updated>2025-04-04T13:19:11.434Z</updated>
  <id>https://wabits.github.io/</id>
  
  <author>
    <name>Wabits</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Archlinux安装记录(配置)</title>
    <link href="https://wabits.github.io/2025/04/01/Archlinux%E5%AE%89%E8%A3%85%E3%81%AE%E9%85%8D%E7%BD%AE/"/>
    <id>https://wabits.github.io/2025/04/01/Archlinux%E5%AE%89%E8%A3%85%E3%81%AE%E9%85%8D%E7%BD%AE/</id>
    <published>2025-04-01T09:08:15.000Z</published>
    <updated>2025-04-04T13:19:11.434Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>作为一个 Linux 爱好者，最近决定尝试安装和配置 Archlinux。以下是我的详细折腾记录，引用了 <a href="https://arch.icekylin.online/">arch.icekylin.online</a> 网站的内容。</p><h2 id="为什么选择-Archlinux？"><a href="#为什么选择-Archlinux？" class="headerlink" title="为什么选择 Archlinux？"></a>为什么选择 Archlinux？</h2><p>Archlinux 是一个极简的滚动更新发行版，适合喜欢折腾和深入了解 Linux 的用户。它的安装过程需要手动配置，能够帮助用户学习 Linux 的底层原理。此外，Archlinux 的文档资源（Arch Wiki）非常详尽，几乎可以解决所有问题。</p><p>相比其他发行版，Archlinux 的优势在于：</p><ol><li><strong>极简设计</strong>：只安装必要的组件，用户可以根据需求自由定制。</li><li><strong>滚动更新</strong>：始终保持最新的软件版本，无需重新安装系统。</li><li><strong>学习机会</strong>：通过手动安装和配置，深入了解 Linux 的工作原理。</li></ol><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="1-安装前工作"><a href="#1-安装前工作" class="headerlink" title="1. 安装前工作"></a>1. 安装前工作</h3><h4 id="1-1"><a href="#1-1" class="headerlink" title="1-1."></a>1-1.</h4><p>安装镜像 iso 在开源镜像站（推荐）或者 <a href="https://archlinux.org/download/">archlinux</a> 官方下载页面 下载。</p><p>下面是国内常用的提供 archlinux 安装镜像的开源镜像站（选择一个）：</p><p><a href="https://mirrors.ustc.edu.cn/archlinux/">中国科学技术大学开源镜像站</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/">清华大学开源软件镜像站</a><br><a href="https://mirrors.aliyun.com/archlinux/">阿里云开源镜像站</a><br><a href="https://repo.huaweicloud.com/archlinux/">华为开源镜像站</a></p><h4 id="1-2-准备启动盘"><a href="#1-2-准备启动盘" class="headerlink" title="1-2. 准备启动盘"></a>1-2. 准备启动盘</h4><p>Windows下 <a href="https://rufus.ie/">Rufus</a> 或者 <a href="https://unetbootin.github.io/">UNetbootin</a> 制作启动盘。<br>Linux下使用 <code>dd</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=path/to/archlinux.iso of=/dev/sdx bs=4M status=progress<br></code></pre></td></tr></table></figure><blockquote><p>注意：<code>/dev/sdx</code> 是你的 USB 驱动器，确保选择正确的设备，以免数据丢失。</p></blockquote><h4 id="1-3-将调整启动方式为-UEFI"><a href="#1-3-将调整启动方式为-UEFI" class="headerlink" title="1-3. 将调整启动方式为 UEFI"></a>1-3. 将调整启动方式为 UEFI</h4><p>在 BIOS 中将启动模式设置为 UEFI，并禁用安全启动 <code>Secure Boot</code>。如果你的电脑支持快速启动 <code>Fast Boot</code> ，建议关闭。</p><h4 id="1-4-启动进入安装环境"><a href="#1-4-启动进入安装环境" class="headerlink" title="1-4. 启动进入安装环境"></a>1-4. 启动进入安装环境</h4><p>将 USB 启动盘插入电脑，重启并进入 BIOS 设置启动顺序，选择 USB 启动盘。进入 Archlinux Live 环境后，选择 <code>Boot Arch Linux (x86_64)</code> 进入命令行界面。</p><h4 id="1-5-设置网络连接"><a href="#1-5-设置网络连接" class="headerlink" title="1-5. 设置网络连接"></a>1-5. 设置网络连接</h4><p>如果使用有线网络，通常会自动连接。可以使用 <code>ip a</code> 命令查看网络状态。如果使用无线网络，可以使用 <code>iwctl</code> 命令连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iwctl <span class="hljs-comment"># 进入交互式命令行</span><br></code></pre></td></tr></table></figure><p>在 <code>iwctl</code> 提示符下，使用以下命令连接 Wi-Fi：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">station device list <span class="hljs-comment">#查看无线网卡设备名，比如 wlan0</span><br>station device scan <span class="hljs-comment">#扫描可用的无线网络（device 是你的无线网卡设备名）</span><br>station device get-networks <span class="hljs-comment">#查看可用的无线网络（Wifi ）</span><br>station device connect SSID <span class="hljs-comment">#连接到指定的无线网络（SSID 是你要连接的无线网络名称，）</span><br><span class="hljs-built_in">exit</span> <span class="hljs-comment"># 退出 iwctl交互式命令行 </span><br></code></pre></td></tr></table></figure><p>如果连接成功，可以使用 <code>ping</code> 命令测试网络连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping archlinux.org<br></code></pre></td></tr></table></figure><p>稍等一会，如果能 ping 通，说明网络连接成功。按 <code>Ctrl+c</code> 退出。</p><h4 id="1-6-更新系统时间"><a href="#1-6-更新系统时间" class="headerlink" title="1-6. 更新系统时间"></a>1-6. 更新系统时间</h4><p>Archlinux 默认使用 UTC 时间，如果你的系统时间不正确，可以使用以下命令同步时间：</p><p>使用 <code>timedatectl</code> 命令设置系统时间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">timedatectl set-ntp <span class="hljs-literal">true</span> <span class="hljs-comment"># 启用网络时间同步</span><br>timedatectl status <span class="hljs-comment"># 查看当前时间设置</span><br></code></pre></td></tr></table></figure><h4 id="1-7-更换国内软件仓库镜像源加快下载速度"><a href="#1-7-更换国内软件仓库镜像源加快下载速度" class="headerlink" title="1-7. 更换国内软件仓库镜像源加快下载速度"></a>1-7. 更换国内软件仓库镜像源加快下载速度</h4><p>编辑 <code>/etc/pacman.d/mirrorlist</code> 文件，将国内镜像源置于顶部。可以使用 <code>vim</code> 编辑器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/pacman.d/mirrorlist<br></code></pre></td></tr></table></figure><p>在文件的最上方添加以下镜像源（以中科大镜像源为例）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Server = https://mirrors.ustc.edu.cn/archlinux/<span class="hljs-variable">$repo</span>/os/<span class="hljs-variable">$arch</span><br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="hljs-variable">$repo</span>/os/<span class="hljs-variable">$arch</span><br>Server = https://mirrors.aliyun.com/archlinux/<span class="hljs-variable">$repo</span>/os/<span class="hljs-variable">$arch</span><br>Server = https://repo.huaweicloud.com/archlinux/<span class="hljs-variable">$repo</span>/os/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><h3 id="2-分区与格式化"><a href="#2-分区与格式化" class="headerlink" title="2. 分区与格式化"></a>2. 分区与格式化</h3><p>由于我是512G的硬盘，所以&#x2F;home目录的大小给足了点，请根据自身情况调整即可<br>这里显示当前磁盘分区情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk<br></code></pre></td></tr></table></figure><p>使用 <code>cfdisk</code> 命令分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cfdisk /dev/nvmwe0n1<br></code></pre></td></tr></table></figure><p>选择 <code>GPT</code> 分区表，创建以下分区：</p><ul><li><code>/dev/nvme0n1p1</code>：EFI 分区，大小 512M，类型 <code>EFI System</code></li><li><code>/dev/nvme0n1p2</code>：根分区，大小 20G，类型 <code>Linux filesystem</code></li><li><code>/dev/nvme0n1p3</code>：交换分区，大小 8G，类型 <code>Linux swap</code></li><li><code>/dev/nvme0n1p4</code>：主目录分区，大小 100G，类型 <code>Linux filesystem</code></li><li><code>/dev/nvme0n1p5</code>：数据分区，大小 300G，类型 <code>Linux filesystem</code><br>分区完成后，使用 <code>fdisk</code> 命令查看分区情况：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fdisk -l /dev/nvme0n1<br></code></pre></td></tr></table></figure><blockquote><p>注意：<code>/dev/nvme0n1</code> 是你的硬盘设备名，确保选择正确的设备，以免数据丢失。<br>接下来格式化分区：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkfs.fat -F32 /dev/nvme0n1p1 <span class="hljs-comment"># 格式化 EFI 分区</span><br>mkfs.btrfs -f /dev/nvme0n1p2 <span class="hljs-comment"># 格式化根分区</span><br>mkswap /dev/nvme0n1p3 <span class="hljs-comment"># 格式化交换分区</span><br>mkfs.btrfs -f /dev/nvme0n1p4 <span class="hljs-comment"># 格式化主目录分区</span><br>mkfs.btrfs -f /dev/nvme0n1p5 <span class="hljs-comment"># 格式化数据分区</span><br></code></pre></td></tr></table></figure><p>挂载分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/nvme0n1p2 /mnt <span class="hljs-comment"># 挂载根分区</span><br><span class="hljs-built_in">mkdir</span> /mnt/boot<br>mount /dev/nvme0n1p1 /mnt/boot <span class="hljs-comment"># 挂载 EFI 分区</span><br><span class="hljs-built_in">mkdir</span> /mnt/home<br>mount /dev/nvme0n1p4 /mnt/home <span class="hljs-comment"># 挂载主目录分区</span><br><span class="hljs-built_in">mkdir</span> /mnt/data<br>mount /dev/nvme0n1p5 /mnt/data <span class="hljs-comment"># 挂载数据分区</span><br></code></pre></td></tr></table></figure><blockquote><p>注意：<code>/dev/nvme0n1px</code>是你的分区设备名，确保选择正确的设备，以免数据丢失。<br>如果你使用的是其他文件系统（如 ext4），请根据需要调整格式化命令。<br>如果你使用的是 LVM 或者其他分区方式，请根据需要调整分区和格式化命令。 </p></blockquote><h3 id="3-安装基本系统"><a href="#3-安装基本系统" class="headerlink" title="3. 安装基本系统"></a>3. 安装基本系统</h3><h4 id="3-1-运行以下命令安装基本系统："><a href="#3-1-运行以下命令安装基本系统：" class="headerlink" title="3-1.运行以下命令安装基本系统："></a>3-1.运行以下命令安装基本系统：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacstrap /mnt base linux linux-firmware btrfs-progs<br><span class="hljs-comment"># 使用btrfs文件系统，则需要额外安装一个btrfs-progs包</span><br></code></pre></td></tr></table></figure><p>假如提示GPG证书错误，可能是使用的不是最新的镜像文件(ISO)，可以更新 archlinux-keyring 解决问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman-S archlinux-keyring<br></code></pre></td></tr></table></figure><h4 id="3-2-使用pacstrap安装其它必要的功能性软件"><a href="#3-2-使用pacstrap安装其它必要的功能性软件" class="headerlink" title="3-2.使用pacstrap安装其它必要的功能性软件"></a>3-2.使用pacstrap安装其它必要的功能性软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacstrap /mnt base-devel linux-headers networkmanager dhcpcd vim <span class="hljs-built_in">sudo</span> zsh zsh-completions<br></code></pre></td></tr></table></figure><h4 id="3-3-生成文件系统表："><a href="#3-3-生成文件系统表：" class="headerlink" title="3-3.生成文件系统表："></a>3-3.生成文件系统表：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br></code></pre></td></tr></table></figure><p>使用 <code>vim</code> 编辑 <code>/mnt/etc/fstab</code> 文件，确保文件格式正确。可以使用以下命令查看文件内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /mnt/etc/fstab<br></code></pre></td></tr></table></figure><p>确保文件中包含以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;<br>/dev/nvme0n1p2  /               btrfs   rw,relatime,ssd,space_cache,subvolid=5,subvol=/@  0       0<br>/dev/nvme0n1p4  /home           btrfs   rw,relatime,ssd,space_cache,subvolid=5,subvol=/@home  0       0<br>/dev/nvme0n1p5  /data           btrfs   rw,relatime,ssd,space_cache,subvolid=5,subvol=/@data  0       0<br>/dev/nvme0n1p1  /boot           vfat    umask=0077      0       0<br>/dev/nvme0n1p3  none            swap    defaults        0       0<br></code></pre></td></tr></table></figure><h3 id="4-配置系统"><a href="#4-配置系统" class="headerlink" title="4. 配置系统"></a>4. 配置系统</h3><h4 id="4-1-进入新系统："><a href="#4-1-进入新系统：" class="headerlink" title="4-1.进入新系统："></a>4-1.进入新系统：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">arch-chroot /mnt<br></code></pre></td></tr></table></figure><h4 id="4-2-设置时区和本地化："><a href="#4-2-设置时区和本地化：" class="headerlink" title="4-2.设置时区和本地化："></a>4-2.设置时区和本地化：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime <span class="hljs-comment"># 设置时区</span><br>hwclock --systohc <span class="hljs-comment"># 将系统时间同步到硬件</span><br></code></pre></td></tr></table></figure><h4 id="4-3-设置语言："><a href="#4-3-设置语言：" class="headerlink" title="4-3.设置语言："></a>4-3.设置语言：</h4><p>编辑 <code>/etc/locale.conf</code> 文件，设置语言环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 取消下面的注释</span><br>en_US.UTF-8 UTF-8<br>zh_CN.UTF-8 UTF-8<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;LANG=en_US.UTF-8&quot;</span> &gt; /etc/locale.conf <br><span class="hljs-comment"># 先这样设置，防止中文乱码。安装桌面环境后再改回来</span><br></code></pre></td></tr></table></figure><p>生成语言环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">locale-gen<br></code></pre></td></tr></table></figure><h4 id="4-4-设置主机名和网络："><a href="#4-4-设置主机名和网络：" class="headerlink" title="4-4.设置主机名和网络："></a>4-4.设置主机名和网络：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;archlinux&quot;</span> &gt; /etc/hostname<br></code></pre></td></tr></table></figure><p>编辑 <code>/etc/hosts</code> 文件，添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">127.0.0.1   localhost<br>::1         localhost<br>127.0.1.1   arch.localdomain arch<br></code></pre></td></tr></table></figure><h4 id="4-5-设置-root-密码："><a href="#4-5-设置-root-密码：" class="headerlink" title="4-5.设置 root 密码："></a>4-5.设置 root 密码：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd<br></code></pre></td></tr></table></figure><p>添加用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -m -G wheel -s /bin/zsh username<br>passwd username<br></code></pre></td></tr></table></figure><p>编辑 <code>/etc/sudoers</code>，取消 <code># %wheel ALL=(ALL) ALL</code> 的注释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">EDITOR=vim visudo<br></code></pre></td></tr></table></figure><p>启用 networkmanager 和 sshd 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> NetworkManager<br>systemctl <span class="hljs-built_in">enable</span> sshd<br></code></pre></td></tr></table></figure><h4 id="4-6-安装微码"><a href="#4-6-安装微码" class="headerlink" title="4-6.安装微码"></a>4-6.安装微码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S intel-ucode <span class="hljs-comment"># 如果是 AMD CPU，使用 amd-ucode</span><br></code></pre></td></tr></table></figure><h4 id="4-7-安装引导程序"><a href="#4-7-安装引导程序" class="headerlink" title="4-7.安装引导程序"></a>4-7.安装引导程序</h4><p>安装 GRUB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S grub efibootmgr<br>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=archlinux<br>grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>如果使用的是 BIOS 启动模式，安装 GRUB 的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grub-install --target=i386-pc /dev/nvme0n1<br></code></pre></td></tr></table></figure><h4 id="4-8安装完成"><a href="#4-8安装完成" class="headerlink" title="4-8安装完成"></a>4-8安装完成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exit</span> <span class="hljs-comment"># 退出安装环境</span><br>umount -R /mnt <span class="hljs-comment">#卸载新分区</span><br>reboot <span class="hljs-comment">#重启系统</span><br></code></pre></td></tr></table></figure><blockquote><p>注意重启前要先拔掉u盘，否则你重启后还是进安装程序而不是安装好的系统</p></blockquote><p>设置开机自启动 networkmanager 服务，即可连接网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> NetworkManager <span class="hljs-comment"># 设置开机自启并立即启动 NetworkManager</span><br></code></pre></td></tr></table></figure><p>如果是无线连接(Wi-Fi)，可以使用 <code>nmcli</code> 命令连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli device wifi list <span class="hljs-comment">#列出可用的 Wi-Fi 网络</span><br>nmcli device wifi connect SSID password PASSWORD <span class="hljs-comment"># 连接到指定的 Wi-Fi 网络</span><br></code></pre></td></tr></table></figure><p>如果是有线连接，通常会自动连接。<br>如果没有自动连接，可以使用以下命令手动启动 DHCP 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start dhcpcd<br></code></pre></td></tr></table></figure><h2 id="配置桌面环境"><a href="#配置桌面环境" class="headerlink" title="配置桌面环境"></a>配置桌面环境</h2><h3 id="1-安装桌面环境"><a href="#1-安装桌面环境" class="headerlink" title="1. 安装桌面环境"></a>1. 安装桌面环境</h3><h4 id="1-1-更新系统"><a href="#1-1-更新系统" class="headerlink" title="1-1.更新系统"></a>1-1.更新系统</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -Syu <span class="hljs-comment">#升级系统中所有包</span><br></code></pre></td></tr></table></figure><h4 id="1-2-设置非root用户"><a href="#1-2-设置非root用户" class="headerlink" title="1-2.设置非root用户"></a>1-2.设置非root用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -m -G wheel -s /bin/bash myusername <span class="hljs-comment">#创建一个新用户</span><br>passwd myusername <span class="hljs-comment">#设置新用户密码</span><br></code></pre></td></tr></table></figure><blockquote><p>注意：<code>myusername</code> 是你要创建的用户名，选择一个合适的用户名。弱密码已经不被接受，请设置强密码</p></blockquote><h4 id="1-3-设置archlinuxcn与32位软件源"><a href="#1-3-设置archlinuxcn与32位软件源" class="headerlink" title="1-3.设置archlinuxcn与32位软件源"></a>1-3.设置archlinuxcn与32位软件源</h4><p>编辑 &#x2F;etc&#x2F;pacman.conf 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/pacman.conf<br></code></pre></td></tr></table></figure><p>在文件末尾添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">[archlinuxcn]<br>SigLevel = Never<br>Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch<br></code></pre></td></tr></table></figure><p>去掉 <code>multilib</code> 一节中两行的注释，来开启32位软件源支持</p><p>保存退出，然后数据库并更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -Sy<br></code></pre></td></tr></table></figure><h4 id="1-4-安装配置桌面"><a href="#1-4-安装配置桌面" class="headerlink" title="1-4.安装配置桌面"></a>1-4.安装配置桌面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S plasma sddm konsole dolphin kate partitionmanager ark filelight gwenview <br>okular spectacle <br></code></pre></td></tr></table></figure><p>安装xorg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S xorg<br></code></pre></td></tr></table></figure><p>启动sddm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> sddm <span class="hljs-comment">#设置开机自启</span><br>systemctl start sddm <span class="hljs-comment">#启动sddm</span><br></code></pre></td></tr></table></figure><h4 id="1-5-安装常用软件"><a href="#1-5-安装常用软件" class="headerlink" title="1-5.安装常用软件"></a>1-5.安装常用软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S firefox vlc gimp libreoffice-fresh thunderbird<br>pacman -S sof-firmware alsa-firmware alsa-ucm-conf <span class="hljs-comment">#声音固件</span><br>pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei <span class="hljs-comment">#中文字体</span><br>pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra <span class="hljs-comment">#谷歌开源字体与表情</span><br>pacman -S firefox chromium <span class="hljs-comment">#浏览器</span><br>pacman -S steam <span class="hljs-comment">#游戏平台</span><br></code></pre></td></tr></table></figure><h4 id="1-6-设置中文"><a href="#1-6-设置中文" class="headerlink" title="1-6.设置中文"></a>1-6.设置中文</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/locale.conf<br></code></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">LANG=zh_CN.UTF-8<br></code></pre></td></tr></table></figure><p>打开设置把语言设置为中文，重启系统即可。</p><h4 id="1-7-安装中文输入法"><a href="#1-7-安装中文输入法" class="headerlink" title="1-7.安装中文输入法"></a>1-7.安装中文输入法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-anthy fcitx5-pinyin-moegirl <br>pacman -S fcitx5-material-color<br></code></pre></td></tr></table></figure><p>编辑 <code>~/.xprofile</code> 文件，添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> GTK_IM_MODULE=fcitx<br><span class="hljs-built_in">export</span> QT_IM_MODULE=fcitx<br><span class="hljs-built_in">export</span> XMODIFIERS=@im=fcitx<br><span class="hljs-built_in">export</span> INPUT_METHOD=fcitx<br><span class="hljs-built_in">export</span> SDL_IM_MODULE=fcitx<br><span class="hljs-built_in">export</span> GLFW_IM_MODULE=fcitx<br></code></pre></td></tr></table></figure><p>打开设置在 <code>输入法</code> 中选择 <code>fcitx5</code>，然后重启系统。</p><h2 id="深度配置"><a href="#深度配置" class="headerlink" title="深度配置"></a>深度配置</h2><h3 id="1-显卡驱动"><a href="#1-显卡驱动" class="headerlink" title="1. 显卡驱动"></a>1. 显卡驱动</h3><p>我的电脑使用 NVIDIA 显卡，安装驱动时遇到了黑屏问题。解决方法是安装 <code>nvidia-dkms</code> 并更新内核：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S nvidia-dkms<br><span class="hljs-built_in">sudo</span> mkinitcpio -P<br></code></pre></td></tr></table></figure><h3 id="2-中文字体"><a href="#2-中文字体" class="headerlink" title="2. 中文字体"></a>2. 中文字体</h3><p>默认情况下，系统没有中文字体，导致中文显示为方块。安装 <code>noto-fonts-cjk</code> 后解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S noto-fonts-cjk<br></code></pre></td></tr></table></figure><h3 id="3-AUR-软件安装"><a href="#3-AUR-软件安装" class="headerlink" title="3. AUR 软件安装"></a>3. AUR 软件安装</h3><p>一些软件在官方仓库中没有，需要通过 AUR 安装。我使用 <code>yay</code> 作为 AUR 助手：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S base-devel<br>git <span class="hljs-built_in">clone</span> https://aur.archlinux.org/yay.git<br><span class="hljs-built_in">cd</span> yay<br>makepkg -si<br></code></pre></td></tr></table></figure><h3 id="4-美化桌面"><a href="#4-美化桌面" class="headerlink" title="4. 美化桌面"></a>4. 美化桌面</h3><p>为了让桌面更美观，我安装了以下主题和图标包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S kvantum-qt5 papirus-icon-theme<br></code></pre></td></tr></table></figure><p>通过 KDE 设置应用这些主题后，桌面焕然一新。</p><h3 id="5-自动化脚本"><a href="#5-自动化脚本" class="headerlink" title="5. 自动化脚本"></a>5. 自动化脚本</h3><p>为了简化后续配置，我编写了一个自动化脚本，用于安装常用软件和配置系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">sudo</span> pacman -Syu<br><span class="hljs-built_in">sudo</span> pacman -S firefox vlc git noto-fonts-cjk<br></code></pre></td></tr></table></figure><p>将脚本保存为 <code>setup.sh</code>，然后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash setup.sh<br></code></pre></td></tr></table></figure><h2 id="遇到的问题和解决方法"><a href="#遇到的问题和解决方法" class="headerlink" title="遇到的问题和解决方法"></a>遇到的问题和解决方法</h2><h3 id="1-网络连接问题"><a href="#1-网络连接问题" class="headerlink" title="1. 网络连接问题"></a>1. 网络连接问题</h3><p>在 Live 环境中，网络未自动连接。通过以下命令手动启动 DHCP 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start dhcpcd<br></code></pre></td></tr></table></figure><h3 id="2-GRUB-引导失败"><a href="#2-GRUB-引导失败" class="headerlink" title="2. GRUB 引导失败"></a>2. GRUB 引导失败</h3><p>安装 GRUB 后，系统无法引导。检查发现是 EFI 分区未正确挂载。重新挂载后重新安装 GRUB 解决。</p><h3 id="3-软件源速度慢"><a href="#3-软件源速度慢" class="headerlink" title="3. 软件源速度慢"></a>3. 软件源速度慢</h3><p>默认的软件源速度较慢，通过编辑 <code>/etc/pacman.d/mirrorlist</code>，将国内镜像源置于顶部解决。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过这次折腾，我对 Linux 系统的底层结构有了更深入的了解。虽然 Archlinux 的安装和配置过程较为复杂，但它的高可定制性和滚动更新模式让我感到非常值得。未来，我计划进一步探索 Archlinux 的更多功能，比如自定义内核和自动化脚本配置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Archlinux" scheme="https://wabits.github.io/tags/Archlinux/"/>
    
    <category term="Linux" scheme="https://wabits.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
